import timefrom selenium.webdriver.common.action_chains import ActionChainsfrom selenium.webdriver.common.by import Byfrom selenium.webdriver.support.ui import WebDriverWaitfrom selenium.webdriver.support import expected_conditions as ECfrom selenium.common.exceptions import TimeoutExceptionclass BasePage(object):    def __init__(self, driver):        self.driver = driver        self.wait = WebDriverWait(driver, 10)        self.timeout = 10    def find_element(self, locator):        return self.wait.until(EC.element_to_be_clickable(locator))    def get_alert_msg(self):        alert = self.wait.until(EC.alert_is_present())        print("ALERT MESSAGE: " + alert.text)        time.sleep(2)        return alert.text    def alert_accept(self):        alert = self.wait.until(EC.alert_is_present())        alert.accept()    def wait_to_be_visible(self, locator):        return self.wait.until(EC.visibility_of_element_located(locator))    def build_and_wait_to_be_visible(self, str_xpath, text_to_replace, value):        str_xpath = str(str_xpath)        text_to_replace = str(text_to_replace)        value = str(value)        str_xpath = str_xpath.replace(text_to_replace, value)        print(str_xpath)        self.wait.until(EC.visibility_of_element_located((By.XPATH, str_xpath)))    def build_and_find_element(self, str_xpath, text_to_replace, value):        str_xpath = str(str_xpath)        text_to_replace = str(text_to_replace)        value = str(value)        str_xpath = str_xpath.replace(text_to_replace, value)        print(str_xpath)        return self.wait.until(EC.element_to_be_clickable((By.XPATH, str_xpath)))def open(self, url):    url = self.base_url + url    self.driver.get(url)def get_title(self):    return self.driver.titledef get_url(self):    return self.driver.current_urldef hover(self, *locator):    element = self.find_element(*locator)    hover = ActionChains(self.driver).move_to_element(element)    hover.perform()def wait_element(self, *locator):    try:        WebDriverWait(self.driver, 10).until(EC.presence_of_element_located(locator))    except TimeoutException:        print("\n * ELEMENT NOT FOUND WITHIN GIVEN TIME! --> %s" % (locator[1]))        self.driver.quit()